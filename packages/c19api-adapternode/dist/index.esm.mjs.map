{"version":3,"file":"index.esm.mjs","sources":["../src/index.js"],"sourcesContent":["/** @format */\n\nconst convertMeta = (meta) => {\n\tconst { created, currentAsOf } = meta;\n\treturn {\n\t\tcreated,\n\t\tcurrentAsOf: {\n\t\t\ticuOccupation: new Date(currentAsOf.icuOccupation),\n\t\t\thospitalized: new Date(currentAsOf.hospitalized),\n\t\t},\n\t};\n};\n\n/**\n *\n *  A utility method to convert a dataSet in the history\n *\n * @param { {} } entry - the currently parsed entry\n * @param { {} } lastEntry - the previous entry\n * @param { number } index - the current index\n * @param { {} } metaData - the metaData returned by the api call that is used to extend the entry\n *\n * @returns { {} } the converted object\n */\n\nconst convertDataSet = (entry, lastEntry, index, metaData) => {\n\tconst convertedEntry = { index, meta: convertMeta(entry.meta) };\n\n\tdelete entry._id;\n\tdelete entry.meta;\n\n\tfor (const dataPoint in entry) {\n\t\tif (Object.hasOwnProperty.call(entry, dataPoint)) {\n\t\t\tconst data = entry[dataPoint];\n\n\t\t\tconvertedEntry[dataPoint] = {\n\t\t\t\ttitle: metaData[dataPoint].title,\n\t\t\t\tdescription: metaData[dataPoint].description,\n\t\t\t\tthreshold: metaData[dataPoint].threshold,\n\t\t\t\tunit: metaData[dataPoint].unit,\n\t\t\t\tvalue: data,\n\t\t\t\tcases: data,\n\t\t\t\tlastValue: lastEntry ? lastEntry[dataPoint] : 0,\n\t\t\t};\n\t\t}\n\t}\n\n\treturn convertedEntry;\n};\n\n/**\n * The adapter function is used to adapt the data returned by the V2Api back to the Schema the V1 API.\n *\n * @param { {} } data - the data object returned by the API. The object needs to containg the history and metaData\n * @returns { {} } containing the history array property, the timeStamp and the number of DataSets returned. The\n * raw property also contains the data passed to the function\n */\n\nexport const adaptData = (data) => {\n\tconst { history, metaData } = data;\n\n\t/**\n\t * If the extracted metaData does not exist, or the history object has only one entrance, the data cannot be\n\t * parsed. Throw an error and notify the user\n\t */\n\n\tif (history.length <= 1 || metaData === null) {\n\t\tthrow new Error(\n\t\t\t`C19ApiV2-AdapterNode: Parsing data requires a dataSet containing metaData and a history object with a length longer then 1. Check your API response for errors.`\n\t\t);\n\t}\n\n\t/**\n\t * Parse the provided history array into an array containing the daily data. This enables the consumer to use the\n\t * history entries indepenendently. It also converts the slimmer v2 api into the v1 api.\n\t */\n\n\tconst parsedData = history.map((entry, index) =>\n\t\tconvertDataSet(entry, history[index - 1], index, metaData)\n\t);\n\n\treturn {\n\t\ttimeStamp: metaData.requestTimeStamp,\n\t\tnumberOfDataSets: metaData.numberOfDataSets,\n\t\thistory: parsedData,\n\t\traw: data,\n\t};\n};\n"],"names":["convertMeta","meta","created","currentAsOf","icuOccupation","Date","hospitalized","adaptData","data","history","metaData","length","Error","parsedData","map","entry","index","lastEntry","convertedEntry","_id","dataPoint","Object","hasOwnProperty","call","title","description","threshold","unit","value","cases","lastValue","convertDataSet","timeStamp","requestTimeStamp","numberOfDataSets","raw"],"mappings":"AAEA,MAAMA,EAAeC,IACpB,MAAMC,QAAEA,EAAOC,YAAEA,GAAgBF,EACjC,MAAO,CACNC,QAAAA,EACAC,YAAa,CACZC,cAAe,IAAIC,KAAKF,EAAYC,eACpCE,aAAc,IAAID,KAAKF,EAAYG,iBAkDzBC,EAAaC,IACzB,MAAMC,QAAEA,EAAOC,SAAEA,GAAaF,EAO9B,GAAIC,EAAQE,QAAU,GAAkB,OAAbD,EAC1B,MAAM,IAAIE,MACT,mKASF,MAAMC,EAAaJ,EAAQK,KAAI,CAACC,EAAOC,IApDjB,EAACD,EAAOE,EAAWD,EAAON,KAChD,MAAMQ,EAAiB,CAAEF,MAAAA,EAAOf,KAAMD,EAAYe,EAAMd,cAEjDc,EAAMI,WACNJ,EAAMd,KAEb,IAAK,MAAMmB,KAAaL,EACvB,GAAIM,OAAOC,eAAeC,KAAKR,EAAOK,GAAY,CACjD,MAAMZ,EAAOO,EAAMK,GAEnBF,EAAeE,GAAa,CAC3BI,MAAOd,EAASU,GAAWI,MAC3BC,YAAaf,EAASU,GAAWK,YACjCC,UAAWhB,EAASU,GAAWM,UAC/BC,KAAMjB,EAASU,GAAWO,KAC1BC,MAAOpB,EACPqB,MAAOrB,EACPsB,UAAWb,EAAYA,EAAUG,GAAa,GAKjD,OAAOF,GA+BNa,CAAehB,EAAON,EAAQO,EAAQ,GAAIA,EAAON,KAGlD,MAAO,CACNsB,UAAWtB,EAASuB,iBACpBC,iBAAkBxB,EAASwB,iBAC3BzB,QAASI,EACTsB,IAAK3B"}